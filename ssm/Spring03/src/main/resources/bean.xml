<?xml  version="1.0"  encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
<!--普通方法-->
<!--    <bean id="instanceFactory" class="com.tong.service.factory.InstanceFactory"/>-->
<!--    <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountServiceImpl"/>-->
<!--静态方法-->
<!--        <bean id="accountService" class="com.tong.service.factory.InstanceFactory" factory-method="getAccountServiceImpl"/>-->


<!--    spring的依赖注入
        依赖注入
        IOC作用:
            降低程序见的耦合(依赖关系)
        依赖关系的管理:
            以后交给spring来维护

         当前类需要用到其他类的对象时,由spring提供,我们只需要再配置文件中说明
         依赖关系的维护:
            就称为依赖注入
         一依赖注入:
            能注入的数据有三类
                String
                其他Bean类型
                复杂类型
            注入方式:
                构造函数
                set方法
                注释提供


-->
<!--    构造函数注入-->
    <bean id="accountService" class="com.tong.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="贾立桐"/>
        <constructor-arg name ="age" value="21"/>
        <constructor-arg name="bir" ref="now"/>
    </bean>

    <bean id="now" class="java.util.Date"/>
<!--    set方法注入
        标签 : property
-->
    <bean id="accountService2" class="com.tong.service.impl.AccountServiceImpl2">
        <property name="name" value="贾立桐"/>
        <property name="age" value="21"/>
        <property name="bir" ref="now"/>
    </bean>

<!--    复杂类型注入/集合的注入-->
<!--    相同的结构用类似的集合
            list: array list set
            map:  map property
-->
    <bean name="accountService3" class="com.tong.service.impl.AccountServiceImpl3">
        <property name="myStrings">
            <array>
                <value>aaa</value>
                <value>aaa</value>
                <value>aaa</value>
            </array>
        </property>
        <property name="myMaps">
            <map>
                <entry key="J">
                    <value>111</value>
                </entry>
                <entry key="l" value="222"></entry>
            </map>
        </property>
        <property name="myProperties">
            <props>
                <prop key="A">111</prop>
                <prop key="B">222</prop>
            </props>
        </property>
    </bean>

</beans>